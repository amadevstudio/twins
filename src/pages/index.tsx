import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";

import { api } from "@/utils/api";
import { cn } from "@/lib/utils";
import { Inter as FontSans } from "next/font/google";

import Header from "@/components/base/header"
import { Button } from "@/components/ui/button-base";
import { Input } from "@/components/ui/input-base"
import {env} from "@/env";
import Link from "next/link";

export const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

export default function Home() {
  // const hello = api.post.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>{env.NEXT_PUBLIC_PROJECT_NAME}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className={cn(
          "flex min-h-screen pb-10 flex-col items-center justify-between",
          fontSans.variable,
        )}
      >
        <Header/>

        <div className="container items-center">
          <Input
            placeholder="Введите ключевые слова для поиска нужного вам человека"
          />
        </div>

        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="flex flex-col items-center gap-2">
            {/*<p className="text-2xl">*/}
            {/*  {hello.data ? hello.data.greeting : "Loading tRPC query..."}*/}
            {/*</p>*/}
            <AuthShowcase />
          </div>
        </div>

        <div className="container flex justify-center">
          <Link
            className="text-center"
            target="_blank"
            href="https://google.com/search?q=agreement"
          >
            Пользовательское соглашение и политика конфиденциальности
          </Link>
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  const authViaGoogle = async () => {
    await signIn("google");
  };

  const authViaEmail = async () => {
    await signIn();
  };

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>

      {!sessionData && (
        <>
          <p className="text-center">
            Чтобы внести свое описание в базу сервиса и позволить другим найти вас по<br/>
            вашим ключевым словам, пожалуйста, войдите:
          </p>
          <div className="flex items-center gap-2">
            <Button onClick={authViaGoogle}>Google</Button>
            <Button onClick={authViaEmail}>Почта</Button>
          </div>
        </>
      )}
      {!!sessionData && (
        <Button onClick={() => void signOut()}>{"Sign out"}</Button>
      )}
    </div>
  );
}
