version: "3.9"
services:
  app:
    platform: "linux/amd64"
    build:
      context: ./app
      dockerfile: Dockerfile
    working_dir: /app
    env_file:
      - app/.env
    networks:
      - data-db-network
      - storage-network
    ports:
      - "3000:3000"
    image: twins
    depends_on:
      db:
        condition: service_healthy
      storage:
        condition: service_started

  db:
    image: postgres:15.1-alpine
    command: postgres -c listen_addresses='*'
    restart: on-failure
    env_file:
      - app/.env
    environment:
      ALLOW_IP_RANGE: 0.0.0.0/0
    volumes:
      - ./database/postgresql/data:/var/lib/postgresql/data
    networks:
      - data-db-network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 2s
      timeout: 5s
      retries: 10

  storage:
    build:
      context: ./redis
      dockerfile: Dockerfile
      target: base
    restart: on-failure
    volumes:
      - ./redis/redis-data:/var/lib/redis
    #      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - storage-network
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
    env_file:
      - redis/.env


networks:
  data-db-network:
    driver: bridge
  storage-network:
    driver: bridge
